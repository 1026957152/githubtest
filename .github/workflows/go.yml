name: Build Docker Image
on:
  push:
    branches:
      - main
jobs:
  build:
    name: push docker image to docker hub
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: build the docker image
        id: build-docker-image
        run: |
          ls -la 
          docker build . -f Dockerfile -t livekit.yulinmei.cn:10443/demo-image-test:0.0.1
      - name: push the docker image
        id: push-docker-image
        run: docker push livekit.yulinmei.cn:10443/demo-image-test:0.0.1

#      - name: Set up Kubectl
#        run: |
#          mkdir ${HOME}/.kube
#          echo ${{ secrets.KUBECONFIG }} | base64 --decode > ${HOME}/.kube/config
      - name: Set Kubernetes Context
        uses: azure/k8s-set-context@v1
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }} # Use secret (https://developer.github.com/actions/managing-workflows/storing-secrets/)

      - name: Creating a Pod
        run: |
          kubectl apply -f .github/hello-world-pod.yaml

      - name: Deploying the Application
        run: |
          kubectl apply -f .github/hello-world-deployment.yaml
      #
      #      - name: Service
      #        run: |
      #          kubectl apply -f .github/service.yml -n nginx --insecure-skip-tls-verify

      - name: Exposing the Application
        run: |
          kubectl apply -f .github/hello-world-service.yaml

      - name: Create a service of type LoadBalancer
        run: |
          kubectl apply -f .github/hello-world-service-loadbalancing.yaml

#      - name: Exposing the Application
#        run: |
#          kubectl expose deployment hello-world --type=ClusterIP --name=hello-world-service --port=8080 --target-port=8080 -n demo

#      - name: Create a service of type LoadBalancer
#        run: |
#          kubectl expose deployment hello-world --type=LoadBalancer --name=hello-world-service-loadbalancing --port=8080 --target-port=8080 -n demo
#


